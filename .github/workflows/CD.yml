# Nome do fluxo
name: CD

# Aciona o fluxo quando:
on:
  # Houver um push nas branches main e release
  push:
    branches: [ "main" ]
  # Permite a execução manual
  workflow_dispatch:

# Fluxo de trabalho
jobs:

  CD:
    runs-on: ubuntu-latest
    # Passos do fluxo de trabalho
    steps:
    
      - name: Configuração SSH Azure
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/azure.key
          chmod 600 ~/.ssh/azure.key
          cat >>~/.ssh/config <<END
          Host azure
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/azure.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.AZURE_SSH_USER }}
          SSH_KEY: ${{ secrets.AZURE_SSH_KEY }}
          SSH_HOST: ${{ secrets.AZURE_SSH_HOST }}

      - name: Checkout do repositório
        uses: actions/checkout@v3
        
      - name: Preparando JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
          
      - name: Executando testes
        run: mvn -B -f pom.xml test jacoco:prepare-agent jacoco:report
        
      - name: SonarCloud Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
         mvn -B verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=guilherme2041 -Dsonar.projectKey=Guilherme2041_java-api -Dsonar.language=java -Dsonar.java.coveragePlugin=jacoco -Dmaven.test.skip=true
         
      - name: Etapa de build
        run: mvn -B -f pom.xml clean install -Dmaven.test.skip=true
          
      - name: Etapa de Deploy
        run: |
          ssh azure 'sudo systemctl stop java-app'
          ssh azure 'sudo rm -rf /app/java-api.jar'
          scp target/java-api.jar azure:~/java-api.jar
          ssh azure 'sudo mv ~/java-api.jar /app/java-api.jar'
          ssh azure 'sudo systemctl start java-app'
